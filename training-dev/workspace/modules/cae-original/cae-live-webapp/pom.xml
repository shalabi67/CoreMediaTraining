<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.coremedia.training.coredining</groupId>
    <artifactId>cae</artifactId>
    <version>7.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>


  <artifactId>cae-live-webapp</artifactId>
  <packaging>war</packaging>

  <description>Configuration and templates for the CAE that only applies to the live CAE</description>

  <properties>
    <finalName>coredining</finalName>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cae-base-component</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${finalName}</finalName>
    <plugins>
      <!--
         invoke "mvn tomcat7:run" for running this webapp locally using a tomcat
      -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <path>/${project.build.finalName}</path>
          <port>${DELIVERY_PORT_PREFIX}${HTTP_PORT_SUFFIX}</port>
          <warSourceDirectory>${project.basedir}/src/main/webapp</warSourceDirectory>
          <!-- enable Tomcat to reload resources (=templates) while running -->
          <contextFile>${project.basedir}/src/main/servletengine/tomcat-context.xml</contextFile>
          <systemProperties>
            <coremedia.application.repository.url>http://${mls.host}:${MLS_PORT_PREFIX}${HTTP_PORT_SUFFIX}/coremedia/ior</coremedia.application.repository.url>
            <coremedia.application.solr.search.url>http://${solr.host}:${SOLR_MASTER_PORT_PREFIX}${HTTP_PORT_SUFFIX}/solr/live</coremedia.application.solr.search.url>
            <coremedia.application.elastic.solr.url>http://${solr.host}:${SOLR_MASTER_PORT_PREFIX}${HTTP_PORT_SUFFIX}/solr</coremedia.application.elastic.solr.url>
            <coremedia.application.signCookie.publicKey>${signCookie.publicKey}</coremedia.application.signCookie.publicKey>
            <coremedia.application.signCookie.privateKey>${signCookie.privateKey}</coremedia.application.signCookie.privateKey>
            <!--
               Sets a JMX remote url so that the webapp can be accessed via JMX when running with tomcat plugin.
               When running this application in a standalone tomcat, then the tomcat's built-in remote connector server
               can be used instead.
            -->
            <coremedia.application.management.server.remote.url>service:jmx:rmi:///jndi/rmi://localhost:1099/cae-live</coremedia.application.management.server.remote.url>
            <!--
               Storing logs below target so that they will be cleaned on "mvn clean", too
            -->
            <coremedia.logging.directory>${project.build.directory}/logs</coremedia.logging.directory>

            <coremedia.application.cae.use.local.resources>${cae.use.local.resources}</coremedia.application.cae.use.local.resources>
            <coremedia.application.view.debug.enabled>${view.debug.enabled}</coremedia.application.view.debug.enabled>
          </systemProperties>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>websphere</id>
      <!-- workaround Websphere's unperformant resource loading -->
      <build>
        <plugins>
          <plugin>
            <groupId>net.jangaroo</groupId>
            <artifactId>webjars-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>unpack</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
