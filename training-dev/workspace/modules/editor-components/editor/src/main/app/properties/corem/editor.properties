#
# editor.properties
#

# the user and password combination for the convenient login
login.username=
login.domain=
login.password=
login.immediate=

# to enable custom richtext style uncomment the property and edit the targeted css 
#editor.richtext.css.location=properties/css/coremedia-richtext-1.0.css
editor.configuration=properties/corem/editor.xml
editor.startup.configuration=properties/corem/editor-startup.xml

# display the embedded document view in the explorer
# the default value of this property is false
editor.display.embedded.view=true

### user manager settings

# The search result size limits the number of users or groups obtained
# by searching. You should set it small, as the user manager GUI is not
# designed to be used as an Ldap browser. The value must be smaller than
# the user and group cache sizes of your content server (see contentserver.properties,
# default 500). The size may also be limited by your particular Ldap server
# (e.g. Active Directory: 1500).
usermanager.searchResultSize=490

# The url of the User Manuals.
# The following place holders are supported at runtime:
# {0} = the language key (en, de, fr, ...)
# {1} = the major release number
# {2} = the minor release number
user.manual.url=${cms.editor.manuals.base.url}/editor-user-{0}.pdf

# RichTextMode
#
# In the context of the new TabbedXmlPropertyEditor our implementation
# of the SgmlTextModel for RichText unfortunately had to undergo some
# incompatible enhancements. With the editor.richtext.model.traditional
# property you can preserve the original behaviour.
#
# Set this property to "true" if (and only if) you use a customized
# AbstractTextPane which casts its SgmlTextModel to RichTextDocument.
#
# However, if you do so, you can use neither the TabbedXmlPropertyEditor
# nor the PlainXmlPropertyEditor which are both based on the new model.
# The RichTextPane (as well as extending classes) works in both modes.
editor.richtext.model.traditional=false

# Remove comment to enable strict mimetype checks. Thus having this enabled
# you cannot load blobs anymore which mismatch the specified mimetype of
# the blob-property. Mind that you might need to adjust mime.properties to
# support more aliases of mimetypes.
#editor.blob.mimetype.strict=true

# Disable autosave.
# We introduced this flag for automatic tests.  It ignores the
# AutosaveIntervall from the preferences, but it does not disable
# the autosave menu.  So human users would be confused, and it is not
# recommended to use this flag for real world usage.
#editor.autosave.enabled=false

# Disable user related query clauses like "Approved by" with users
# other than the logged-in editor user himself.
#editor.query.allowUsers=false

# Show popup notifications for content changes ("checkin", "save" and "uncheckout") in opened document,
# that are performed in a different editor (e.g. studio).
show.content.change.popups=true
