<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--
      You will need to change the groupId in all modules
      A global search&replace will do the job !
  -->
  <groupId>com.coremedia.training.coredining</groupId>
  <artifactId>workspace</artifactId>
  <version>7.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>CoreDining Training Workspace</name>

  <organization>
    <name>CoreMedia Training Center</name>
  </organization>

  <properties>
    <failOnWarning>false</failOnWarning>
    <coremedia.enforcer.fail>false</coremedia.enforcer.fail>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <compile.source.jdk>1.7</compile.source.jdk>
    <compile.target.jdk>1.7</compile.target.jdk>

    <!--
     | set this property in any reactor module, e.g. a module that has a modules element, so that it points to
     | the correct path relative to the submodules.
    -->
    <workspace.configuration.dir>../workspace-configuration</workspace.configuration.dir>

    <customer>CoreDining</customer>

    <cms.version>7.1.5-10</cms.version>
    <studio.version>7.1.5-10</studio.version>
    <caetoolbox.version>7.1.5-10</caetoolbox.version>
    <jangaroo.version>2.0.12</jangaroo.version>
    <jangaroo.libs.version>2.0.11</jangaroo.libs.version>


    <!--
      Location of the Site Manager user manual.

      If your editors are supposed to work in internet-restricted environments,
      you must host the manuals inhouse (e.g. add them to the webstart webapp) and
      adjust this url accordingly.
    -->
    <cms.editor.manuals.base.url>https://documentation.coremedia.com/editor-user/${cms.version}</cms.editor.manuals.base.url>

    <tomcat.version>7.0.57</tomcat.version>
    <logback.version>1.0.9</logback.version>
    <junit.version>4.11</junit.version>
    <application-plugin.version>2.7.9</application-plugin.version>
    <project-extension.version>1.0.5</project-extension.version>
    <powermock.version>1.5</powermock.version>
    <hamcrest.version>1.2.1</hamcrest.version>

    <mongo-java-driver.version>2.11.2</mongo-java-driver.version>

    <!--
    | the following *.host properties are defined here for convenience, so that they can be overridden
    | via a profile in the settings.xml.
    | If you want to develop applications against services started either in a shared deployment on a remote machine
    | or against services running in your vagrant boxes you need to add a profile that overrides these properties.
    | For the vagrant boxes you simply have to activate the vagrant profile.
    | if all services are running on one box you can use installation
    -->
    <installation.host>localhost</installation.host>

    <cms.host>${installation.host}</cms.host>
    <mls.host>${installation.host}</mls.host>
    <solr.host>${installation.host}</solr.host>
    <caefeeder-preview.host>${installation.host}</caefeeder-preview.host>
    <caefeeder-live.host>${installation.host}</caefeeder-live.host>
    <mongo.db.host>${installation.host}</mongo.db.host>
    <database.host>${installation.host}</database.host>

    <studio.host>${installation.host}</studio.host>

    <rls.host>${installation.host}</rls.host>

    <!--
    | true if links to resources such as JavaScript and CSS should be generated to point to files in the
    | application container (e.g. in modules under META-INF/resources/) instead of the content repository.
    | this is useful while developing JSPs, CSS and JavaScript before importing the files into the repository.
    -->
    <cae.use.local.resources>false</cae.use.local.resources>
    <cae.developer.mode>false</cae.developer.mode>
    
    <view.debug.enabled>true</view.debug.enabled>

    <!--
     | default port conventions prefix+suffix=port the aggregation is defined in the packages module
     --><!--default port prefixes-->
    <CONTENT_FEEDER_PORT_PREFIX>39</CONTENT_FEEDER_PORT_PREFIX>
    <STUDIO_PORT_PREFIX>40</STUDIO_PORT_PREFIX>
    <CMS_PORT_PREFIX>41</CMS_PORT_PREFIX>
    <MLS_PORT_PREFIX>42</MLS_PORT_PREFIX>
    <WFS_PORT_PREFIX>43</WFS_PORT_PREFIX>
    <SOLR_MASTER_PORT_PREFIX>44</SOLR_MASTER_PORT_PREFIX>
    <SOLR_SLAVE_PORT_PREFIX>45</SOLR_SLAVE_PORT_PREFIX>
    <CAEFEEDER_PREVIEW_PORT_PREFIX>46</CAEFEEDER_PREVIEW_PORT_PREFIX>
    <CAEFEEDER_LIVE_PORT_PREFIX>47</CAEFEEDER_LIVE_PORT_PREFIX>
    <RLS_PORT_PREFIX>48</RLS_PORT_PREFIX>
    <DELIVERY_PORT_PREFIX>49</DELIVERY_PORT_PREFIX>

    <!--default port suffixes-->
    <HTTP_PORT_SUFFIX>080</HTTP_PORT_SUFFIX>
    <HTTPS_PORT_SUFFIX>443</HTTPS_PORT_SUFFIX>
    <SHUTDOWN_PORT_SUFFIX>005</SHUTDOWN_PORT_SUFFIX>
    <AJP_PORT_SUFFIX>009</AJP_PORT_SUFFIX>
    <JMX_REGISTRY_PORT_SUFFIX>099</JMX_REGISTRY_PORT_SUFFIX>
    <JMX_SERVER_PORT_SUFFIX>098</JMX_SERVER_PORT_SUFFIX>
    <CORBA_PORT_SUFFIX>683</CORBA_PORT_SUFFIX>
    <CORBA_SSL_PORT_SUFFIX>684</CORBA_SSL_PORT_SUFFIX>
    <!--
     | development ports that should only be used below the modules hierarchy to develop with the
     | tomcat7 plugin and the proxyservlet that proxies the preview cae within the studio
     -->
    <PREVIEW_CAE_PROXY_HTTP_PORT_SUFFIX>081</PREVIEW_CAE_PROXY_HTTP_PORT_SUFFIX>
  </properties>

  <profiles>
    <profile>
      <id>vagrant</id>
      <!--
       |  Use this profile to develop against the vagrant setup
       -->
      <properties>
        <vagrant.box.ip>192.168.252.100</vagrant.box.ip>
        <cms.host>${vagrant.box.ip}</cms.host>
        <mls.host>${vagrant.box.ip}</mls.host>
        <solr.host>${vagrant.box.ip}</solr.host>
        <caefeeder-preview.host>${vagrant.box.ip}</caefeeder-preview.host>
        <caefeeder-live.host>${vagrant.box.ip}</caefeeder-live.host>
        <mongo.db.host>${vagrant.box.ip}</mongo.db.host>
        <database.host>${vagrant.box.ip}</database.host>
        <studio.host>${vagrant.box.ip}</studio.host>
        <rls.host>${vagrant.box.ip}</rls.host>
      </properties>
    </profile>
    <profile>
      <id>joo-unit-tests</id>
      <activation>
        <file>
          <exists>/usr/local/bin/phantomjs</exists>
        </file>
        <property>
          <name>phantomjs.bin</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.jangaroo</groupId>
            <artifactId>jangaroo-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <jooUnitTestExecutionTimeout>30000</jooUnitTestExecutionTimeout>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <modules>
    <module>modules</module>
    <!-- 
	===============================
    Build Modules only... 
    ===============================
    <module>packages</module>
    <module>boxes</module>
    -->
  </modules>


  <prerequisites>
    <maven>3.0.3</maven>
  </prerequisites>

  <scm>
    <connection>scm:git:git@github.com:CoreMedia/cms.git</connection>
    <developerConnection>scm:git:git@github.com:CoreMedia/cms.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>localfs</id>
      <url>file://${project.basedir}/target</url>
    </snapshotRepository>
    <repository>
      <id>coremedia.external.releases</id>
      <url>https://repository.coremedia.com/nexus/service/local/staging/deploy/maven2</url>
    </repository>
    <site>
      <id>localsite</id>
      <url>file://${project.basedir}/target/site-deploy</url>
    </site>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>cms-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.coremedia.ui</groupId>
        <artifactId>studio-bom</artifactId>
        <version>${studio.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>


      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.1.1</version>
      </dependency>

      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>3.1</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-coyote</artifactId>
        <version>${tomcat.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-catalina</artifactId>
        <version>${tomcat.version}</version>
      </dependency>

      <!-- we must manage commons-compress because embedded mongo depends on 1.3 while tika-parsers depend on 1.4.1 -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.4.1</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.janino</groupId>
        <artifactId>janino</artifactId>
        <version>2.6.1</version>
      </dependency>

      <!-- Providing both, junit and junit-dep for now. From 4.11 on they are
           actually identical. -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit-dep</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <!-- Providing both, junit and junit-dep for now. From 4.11 on they are
           actually identical. -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>1.9.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.2.2</version>
      </dependency>

      <dependency>
        <groupId>com.coremedia.cae</groupId>
        <artifactId>cae-toolbox-studio-component</artifactId>
        <version>${caetoolbox.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.2</version>
      </dependency>
	  
	  <dependency>
	  	<groupId>com.lowagie</groupId>
	  	<artifactId>itext</artifactId>
	  	<version>2.1.7</version>
	  </dependency>
	  
    </dependencies>
  </dependencyManagement>


  <build>
    <extensions>
      <extension>
        <groupId>com.coremedia.maven</groupId>
        <artifactId>coremedia-project-extension</artifactId>
        <!--
         | You cannot use a property here as this extensions takes place before the poms properties have been evaluated.
        -->
        <version>1.0.5</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>overlays</directory>
                <includes>
                  <include>**/*.*</include>
                </includes>
                <followSymlinks>false</followSymlinks>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>${compile.source.jdk}</source>
            <target>${compile.target.jdk}</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.16</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <addMavenDescriptor>true</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>${customer}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Build>revision: ${buildNumber} - ${maven.build.timestamp}</Implementation-Build>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor>${customer}</Implementation-Vendor>
                <Implementation-Version>${project.version}</Implementation-Version>
                <X-Compile-Source-JDK>${compile.source.jdk}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${compile.target.jdk}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jarsigner-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <pushChanges>false</pushChanges>
            <localCheckout>true</localCheckout>
            <preparationGoals>clean verify</preparationGoals>
            <releaseProfiles>postconfigure,repository-upload,rpm-release-repo</releaseProfiles>
            <arguments>-Ppostconfigure</arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <includeEmptyDirs>true</includeEmptyDirs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.16</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>${customer}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Build>revision: ${buildNumber} - ${maven.build.timestamp}</Implementation-Build>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor>${customer}</Implementation-Vendor>
                <Implementation-Version>${project.version}</Implementation-Version>
                <X-Compile-Source-JDK>${compile.source.jdk}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${compile.target.jdk}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0-alpha-2</version>
        </plugin>

        <plugin>
          <groupId>com.coremedia.maven</groupId>
          <artifactId>coremedia-application-maven-plugin</artifactId>
          <version>${application-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <uriEncoding>utf-8</uriEncoding>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-core</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-util</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-coyote</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jdbc</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-dbcp</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-servlet-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jsp-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jasper</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jasper-el</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-el-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-catalina</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-tribes</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-catalina-ha</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-annotations-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-juli</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-logging-juli</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-logging-log4j</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-maven-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>1.8.1</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-analysis-maven-plugin</artifactId>
          <version>1.0.4</version>
        </plugin>


        <!-- see http://code.google.com/p/sortpom/ --><!-- To start: mvn com.google.code.sortpom:maven-sortpom-plugin:sort --><!-- or with configured pluginGroups: mvn sortpom:sort -->
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>2.2.1</version>
          <configuration>
            <!-- POM Code Convention - http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention -->
            <sortOrderFile>recommended_2008_06.xml</sortOrderFile>
            <createBackupFile>false</createBackupFile>
            <expandEmptyElements>false</expandEmptyElements>
            <!-- Danger: Activate Dependency Sorting at your own risk, dependency order is not irrelevant-->
            <sortDependencies>false</sortDependencies>
            <!-- Danger: Activate Plugin Sorting at your own risk, plugin order is not irrelevant -->
            <sortPlugins>false</sortPlugins>
            <nrOfIndentSpace>2</nrOfIndentSpace>
            <keepBlankLines>true</keepBlankLines>
            <verifyFail>Warn</verifyFail>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.2</version>
        </plugin>

        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>exml-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
          <configuration>
            <validationMode>warn</validationMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>jangaroo-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>webjars-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
        </plugin>
      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-buildnumber-of-git-revision</id>
            <phase>initialize</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.coremedia.maven</groupId>
        <artifactId>coremedia-application-maven-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
  </reporting>

  <repositories>
    <repository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>
